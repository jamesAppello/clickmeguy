{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ollep\\\\Documents\\\\clickmeguy\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../components/Layout';\nimport Characters from '../Characters.json';\nimport CharCard from '../components/CharCard';\n\nconst index = props => {\n  // console.log(props)\n  // CHARCTERS ARRAY\n  const {\n    0: character,\n    1: setCharacters\n  } = useState(Characters);\n  console.log(character); // SCORE\n\n  const {\n    0: score,\n    1: setScore\n  } = useState(0); // ALERT MESSAGE\n\n  const {\n    0: alert,\n    1: setAlert\n  } = useState(''); // METHODS\n\n  const handlePicked = e => {\n    const name = e.target.attributes.getNamedItem('name').value;\n    console.log(name);\n    shuffleCharacters();\n    checkGuess(name, updateTopScore);\n  };\n\n  const updateTopScore = currentScore => {\n    switch (currentScore) {\n      case checkGuess = false:\n        setScore(+1);\n\n        if (score >= 12) {\n          setScore();\n        }\n\n        break;\n\n      case checkGuess = true:\n        setScore();\n    }\n\n    console.log(currentScore);\n  }; // * calledback from handlePicked\n\n\n  const checkGuess = (name, cb) => {\n    const newState = [...character];\n    console.log(newState);\n\n    if (newState.includes(name)) {\n      setAlert(`You already selected ${name.toUpderCase()}!!`);\n      console.log(alert);\n    }\n  }; // * calledback from handlePicked\n\n\n  const shuffleCharacters = () => {\n    setCharacters(shuffleArray(character));\n  }; // * callback from shuffleCharacters\n\n\n  const shuffleArray = arr => {\n    var j, x, i;\n\n    for (i = arr.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = arr[i];\n      arr[i] = arr[j];\n      arr[j] = x;\n    }\n\n    return arr;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Welcome to ClickMeGuy!\"), __jsx(\"div\", {\n    className: \"container Holder\",\n    style: {\n      textAlign: 'center',\n      backgroundColor: 'lightgrey',\n      borderRadius: 10.1618,\n      margin: '0 auto',\n      maxWidth: 945\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, alert), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, character.map(char => __jsx(CharCard, {\n    key: char.id,\n    name: char.name,\n    image: char.image,\n    handlePicked: handlePicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))))));\n}; // index.getInitialProps = async function\n\n\nexport default index;","map":{"version":3,"sources":["C:/Users/ollep/Documents/clickmeguy/pages/index.js"],"names":["useState","Layout","Characters","CharCard","index","props","character","setCharacters","console","log","score","setScore","alert","setAlert","handlePicked","e","name","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","currentScore","cb","newState","includes","toUpderCase","shuffleArray","arr","j","x","i","length","Math","floor","random","textAlign","backgroundColor","borderRadius","margin","maxWidth","map","char","id","image"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\n\r\nimport Layout from '../components/Layout'\r\nimport Characters from '../Characters.json'\r\nimport CharCard from '../components/CharCard'\r\n\r\n\r\nconst index = (props) => {\r\n    // console.log(props)\r\n    // CHARCTERS ARRAY\r\n    const [character, setCharacters] = useState(Characters)\r\n    console.log(character)\r\n    // SCORE\r\n    const [score, setScore] = useState(0);\r\n    // ALERT MESSAGE\r\n    const [alert, setAlert] = useState('');\r\n\r\n    // METHODS\r\n    const handlePicked = e => {\r\n        const name = e.target.attributes.getNamedItem('name').value;\r\n        console.log(name)\r\n        shuffleCharacters()\r\n       \r\n        checkGuess(name, updateTopScore)\r\n    }\r\n    const updateTopScore = (currentScore) => {\r\n        switch(currentScore) {\r\n            case checkGuess = false:\r\n                    setScore(+1)\r\n                    if (score >=12) {\r\n                        setScore()\r\n                    }\r\n                break;\r\n            case checkGuess = true:\r\n                    setScore()        \r\n        }\r\n        console.log(currentScore)\r\n    }\r\n\r\n    // * calledback from handlePicked\r\n    const checkGuess = (name, cb) => {\r\n        const newState = [...character]\r\n        console.log(newState)\r\n        if (newState.includes(name)) {\r\n            setAlert(`You already selected ${name.toUpderCase()}!!`);\r\n            console.log(alert)\r\n        }\r\n    }\r\n    // * calledback from handlePicked\r\n    const shuffleCharacters = () => {\r\n        setCharacters(shuffleArray(character))\r\n    }\r\n    // * callback from shuffleCharacters\r\n    const shuffleArray = arr => {\r\n        var j, x, i;\r\n        for (i = arr.length -1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = x;\r\n        }\r\n        return arr\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Layout>\r\n            {/* ?- make this('<h1>') into a js-jsxVar >> 'switch' -? */}\r\n        <h1>\r\n           Welcome to ClickMeGuy!\r\n        </h1>\r\n        <div className=\"container Holder\" style={{ \r\n            textAlign:'center',\r\n            backgroundColor:'lightgrey',\r\n            borderRadius:10.1618,\r\n            margin:'0 auto',\r\n            maxWidth:945 \r\n        }}>\r\n            <h1>{alert}</h1>\r\n            <div className=\"row\">\r\n                {/* CHARACTERS */}\r\n                {character.map(char => (\r\n                    <CharCard \r\n                        key={char.id}\r\n                        name={char.name}\r\n                        image={char.image}\r\n                        handlePicked={handlePicked}\r\n                    />\r\n                ))}\r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\n// index.getInitialProps = async function\r\n\r\nexport default index"]},"metadata":{},"sourceType":"module"}