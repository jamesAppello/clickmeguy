{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ollep\\\\Documents\\\\clickmeguy\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../components/Layout';\nimport Characters from '../Characters.json';\nimport CharCard from '../components/CharCard';\n\nconst index = props => {\n  // console.log(props)\n  const {\n    0: character,\n    1: setCharacters\n  } = useState(Characters);\n  console.log(character); // const charTEST = Characters.map(char => (\n  //     <div\n  //         key={char.id}\n  //         className='card'\n  //     >\n  //     <span>\n  //     <h1> {char.name} </h1>\n  //     <img src={char.image}/>\n  //     </span>\n  //     </div>\n  // ))\n\n  const handlePicked = e => {\n    const name = e.target.attributes.getNamedItem('name').value;\n    console.log(name);\n    shuffleCharacters();\n    checkGuess(name, updateTopScore);\n  };\n\n  const shuffleCharacters = () => {\n    setCharacters(character = shuffleArray(character));\n  };\n\n  const shuffleArray = arr => {\n    let j, x, i;\n\n    for (i = arr.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = arr[i];\n      arr[i] = arr[j];\n      arr[j] = x;\n    }\n\n    return arr;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Welcome to ClickMeGuy!\"), __jsx(\"div\", {\n    className: \"container Holder\",\n    style: {\n      textAlign: 'center',\n      backgroundColor: 'lightgrey',\n      borderRadius: 10.1618,\n      margin: '0 auto',\n      maxWidth: 945\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"this is a TEST_H1_TAG\"), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, character.map(char => __jsx(CharCard, {\n    key: char.id,\n    name: char.name,\n    image: char.image,\n    handlePicked: handlePicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))))));\n}; // index.getInitialProps = async function\n\n\nexport default index;","map":{"version":3,"sources":["C:/Users/ollep/Documents/clickmeguy/pages/index.js"],"names":["useState","Layout","Characters","CharCard","index","props","character","setCharacters","console","log","handlePicked","e","name","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","shuffleArray","arr","j","x","i","length","Math","floor","random","textAlign","backgroundColor","borderRadius","margin","maxWidth","map","char","id","image"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA6BP,QAAQ,CAACE,UAAD,CAA3C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAHqB,CAKrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoBC,YAApB,CAAiC,MAAjC,EAAyCC,KAAtD;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAK,IAAAA,iBAAiB;AACjBC,IAAAA,UAAU,CAACN,IAAD,EAAOO,cAAP,CAAV;AACH,GALD;;AAMA,QAAMF,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,aAAa,CAACD,SAAS,GAAGc,YAAY,CAACd,SAAD,CAAzB,CAAb;AACH,GAFD;;AAGA,QAAMc,YAAY,GAAGC,GAAG,IAAI;AACxB,QAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;;AACA,SAAKA,CAAC,GAAGH,GAAG,CAACI,MAAJ,GAAY,CAArB,EAAwBD,CAAC,GAAG,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAChCF,MAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAJ;AACAD,MAAAA,CAAC,GAAGF,GAAG,CAACG,CAAD,CAAP;AACAH,MAAAA,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACC,CAAD,CAAZ;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASC,CAAT;AACH;;AACD,WAAOF,GAAP;AACH,GATD;;AAWA,SACI,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFA,EAKA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AACrCQ,MAAAA,SAAS,EAAC,QAD2B;AAErCC,MAAAA,eAAe,EAAC,WAFqB;AAGrCC,MAAAA,YAAY,EAAC,OAHwB;AAIrCC,MAAAA,MAAM,EAAC,QAJ8B;AAKrCC,MAAAA,QAAQ,EAAC;AAL4B,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,EAQI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK3B,SAAS,CAAC4B,GAAV,CAAcC,IAAI,IACf,MAAC,QAAD;AACI,IAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,IAAA,IAAI,EAAED,IAAI,CAACvB,IAFf;AAGI,IAAA,KAAK,EAAEuB,IAAI,CAACE,KAHhB;AAII,IAAA,YAAY,EAAE3B,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHL,CARJ,CALA,CADA,CADJ;AAkCH,CAtED,C,CAwEA;;;AAEA,eAAeN,KAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nimport Layout from '../components/Layout'\r\nimport Characters from '../Characters.json'\r\nimport CharCard from '../components/CharCard'\r\n\r\n\r\nconst index = (props) => {\r\n    // console.log(props)\r\n    const [character, setCharacters] = useState(Characters)\r\n    console.log(character)\r\n\r\n    // const charTEST = Characters.map(char => (\r\n    //     <div\r\n    //         key={char.id}\r\n    //         className='card'\r\n    //     >\r\n    //     <span>\r\n    //     <h1> {char.name} </h1>\r\n    //     <img src={char.image}/>\r\n    //     </span>\r\n    //     </div>\r\n    // ))\r\n    const handlePicked = e => {\r\n        const name = e.target.attributes.getNamedItem('name').value;\r\n        console.log(name)\r\n        shuffleCharacters()\r\n        checkGuess(name, updateTopScore)\r\n    }\r\n    const shuffleCharacters = () => {\r\n        setCharacters(character = shuffleArray(character))\r\n    }\r\n    const shuffleArray = arr => {\r\n        let j, x, i;\r\n        for (i = arr.length -1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = x;\r\n        }\r\n        return arr\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Layout>\r\n            {/* ?- make this('<h1>') into a js-jsxVar >> 'switch' -? */}\r\n        <h1>\r\n           Welcome to ClickMeGuy!\r\n        </h1>\r\n        <div className=\"container Holder\" style={{ \r\n            textAlign:'center',\r\n            backgroundColor:'lightgrey',\r\n            borderRadius:10.1618,\r\n            margin:'0 auto',\r\n            maxWidth:945 \r\n        }}>\r\n            <h1>this is a TEST_H1_TAG</h1>\r\n            <div className=\"row\">\r\n                {/* CHARACTERS */}\r\n                {/* {charTEST} */}\r\n                {character.map(char => (\r\n                    <CharCard \r\n                        key={char.id}\r\n                        name={char.name}\r\n                        image={char.image}\r\n                        handlePicked={handlePicked}\r\n                    />\r\n                ))}\r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\n// index.getInitialProps = async function\r\n\r\nexport default index"]},"metadata":{},"sourceType":"module"}