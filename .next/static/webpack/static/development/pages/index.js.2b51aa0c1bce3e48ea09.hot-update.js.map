{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2b51aa0c1bce3e48ea09.hot-update.js","sources":["webpack:///./node_modules/@material-ui/core/esm/index.js","webpack:///./pages/index.js"],"sourcesContent":["/** @license Material-UI v4.8.2\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable import/export */\nimport * as colors from './colors';\nexport { colors };\nexport * from './styles';\nexport { default as AppBar } from './AppBar';\nexport * from './AppBar';\nexport { default as Avatar } from './Avatar';\nexport * from './Avatar';\nexport { default as Backdrop } from './Backdrop';\nexport * from './Backdrop';\nexport { default as Badge } from './Badge';\nexport * from './Badge';\nexport { default as BottomNavigation } from './BottomNavigation';\nexport * from './BottomNavigation';\nexport { default as BottomNavigationAction } from './BottomNavigationAction';\nexport * from './BottomNavigationAction';\nexport { default as Box } from './Box';\nexport * from './Box';\nexport { default as Breadcrumbs } from './Breadcrumbs';\nexport * from './Breadcrumbs';\nexport { default as Button } from './Button';\nexport * from './Button';\nexport { default as ButtonBase } from './ButtonBase';\nexport * from './ButtonBase';\nexport { default as ButtonGroup } from './ButtonGroup';\nexport * from './ButtonGroup';\nexport { default as Card } from './Card';\nexport * from './Card';\nexport { default as CardActionArea } from './CardActionArea';\nexport * from './CardActionArea';\nexport { default as CardActions } from './CardActions';\nexport * from './CardActions';\nexport { default as CardContent } from './CardContent';\nexport * from './CardContent';\nexport { default as CardHeader } from './CardHeader';\nexport * from './CardHeader';\nexport { default as CardMedia } from './CardMedia';\nexport * from './CardMedia';\nexport { default as Checkbox } from './Checkbox';\nexport * from './Checkbox';\nexport { default as Chip } from './Chip';\nexport * from './Chip';\nexport { default as CircularProgress } from './CircularProgress';\nexport * from './CircularProgress';\nexport { default as ClickAwayListener } from './ClickAwayListener';\nexport * from './ClickAwayListener';\nexport { default as Collapse } from './Collapse';\nexport * from './Collapse';\nexport { default as Container } from './Container';\nexport * from './Container';\nexport { default as CssBaseline } from './CssBaseline';\nexport * from './CssBaseline';\nexport { default as Dialog } from './Dialog';\nexport * from './Dialog';\nexport { default as DialogActions } from './DialogActions';\nexport * from './DialogActions';\nexport { default as DialogContent } from './DialogContent';\nexport * from './DialogContent';\nexport { default as DialogContentText } from './DialogContentText';\nexport * from './DialogContentText';\nexport { default as DialogTitle } from './DialogTitle';\nexport * from './DialogTitle';\nexport { default as Divider } from './Divider';\nexport * from './Divider';\nexport { default as Drawer } from './Drawer';\nexport * from './Drawer';\nexport { default as ExpansionPanel } from './ExpansionPanel';\nexport * from './ExpansionPanel';\nexport { default as ExpansionPanelActions } from './ExpansionPanelActions';\nexport * from './ExpansionPanelActions';\nexport { default as ExpansionPanelDetails } from './ExpansionPanelDetails';\nexport * from './ExpansionPanelDetails';\nexport { default as ExpansionPanelSummary } from './ExpansionPanelSummary';\nexport * from './ExpansionPanelSummary';\nexport { default as Fab } from './Fab';\nexport * from './Fab';\nexport { default as Fade } from './Fade';\nexport * from './Fade';\nexport { default as FilledInput } from './FilledInput';\nexport * from './FilledInput';\nexport { default as FormControl } from './FormControl';\nexport * from './FormControl';\nexport { default as FormControlLabel } from './FormControlLabel';\nexport * from './FormControlLabel';\nexport { default as FormGroup } from './FormGroup';\nexport * from './FormGroup';\nexport { default as FormHelperText } from './FormHelperText';\nexport * from './FormHelperText';\nexport { default as FormLabel } from './FormLabel';\nexport * from './FormLabel';\nexport { default as Grid } from './Grid';\nexport * from './Grid';\nexport { default as GridList } from './GridList';\nexport * from './GridList';\nexport { default as GridListTile } from './GridListTile';\nexport * from './GridListTile';\nexport { default as GridListTileBar } from './GridListTileBar';\nexport * from './GridListTileBar';\nexport { default as Grow } from './Grow';\nexport * from './Grow';\nexport { default as Hidden } from './Hidden';\nexport * from './Hidden';\nexport { default as Icon } from './Icon';\nexport * from './Icon';\nexport { default as IconButton } from './IconButton';\nexport * from './IconButton';\nexport { default as Input } from './Input';\nexport * from './Input';\nexport { default as InputAdornment } from './InputAdornment';\nexport * from './InputAdornment';\nexport { default as InputBase } from './InputBase';\nexport * from './InputBase';\nexport { default as InputLabel } from './InputLabel';\nexport * from './InputLabel';\nexport { default as LinearProgress } from './LinearProgress';\nexport * from './LinearProgress';\nexport { default as Link } from './Link';\nexport * from './Link';\nexport { default as List } from './List';\nexport * from './List';\nexport { default as ListItem } from './ListItem';\nexport * from './ListItem';\nexport { default as ListItemAvatar } from './ListItemAvatar';\nexport * from './ListItemAvatar';\nexport { default as ListItemIcon } from './ListItemIcon';\nexport * from './ListItemIcon';\nexport { default as ListItemSecondaryAction } from './ListItemSecondaryAction';\nexport * from './ListItemSecondaryAction';\nexport { default as ListItemText } from './ListItemText';\nexport * from './ListItemText';\nexport { default as ListSubheader } from './ListSubheader';\nexport * from './ListSubheader';\nexport { default as Menu } from './Menu';\nexport * from './Menu';\nexport { default as MenuItem } from './MenuItem';\nexport * from './MenuItem';\nexport { default as MenuList } from './MenuList';\nexport * from './MenuList';\nexport { default as MobileStepper } from './MobileStepper';\nexport * from './MobileStepper';\nexport { default as Modal } from './Modal';\nexport * from './Modal';\nexport { default as NativeSelect } from './NativeSelect';\nexport * from './NativeSelect';\nexport { default as NoSsr } from './NoSsr';\nexport * from './NoSsr';\nexport { default as OutlinedInput } from './OutlinedInput';\nexport * from './OutlinedInput';\nexport { default as Paper } from './Paper';\nexport * from './Paper';\nexport { default as Popover } from './Popover';\nexport * from './Popover';\nexport { default as Popper } from './Popper';\nexport * from './Popper';\nexport { default as Portal } from './Portal';\nexport * from './Portal';\nexport { default as Radio } from './Radio';\nexport * from './Radio';\nexport { default as RadioGroup } from './RadioGroup';\nexport * from './RadioGroup';\nexport { default as RootRef } from './RootRef';\nexport * from './RootRef';\nexport { default as Select } from './Select';\nexport * from './Select';\nexport { default as Slide } from './Slide';\nexport * from './Slide';\nexport { default as Slider } from './Slider';\nexport * from './Slider';\nexport { default as Snackbar } from './Snackbar';\nexport * from './Snackbar';\nexport { default as SnackbarContent } from './SnackbarContent';\nexport * from './SnackbarContent';\nexport { default as Step } from './Step';\nexport * from './Step';\nexport { default as StepButton } from './StepButton';\nexport * from './StepButton';\nexport { default as StepConnector } from './StepConnector';\nexport * from './StepConnector';\nexport { default as StepContent } from './StepContent';\nexport * from './StepContent';\nexport { default as StepIcon } from './StepIcon';\nexport * from './StepIcon';\nexport { default as StepLabel } from './StepLabel';\nexport * from './StepLabel';\nexport { default as Stepper } from './Stepper';\nexport * from './Stepper';\nexport { default as SvgIcon } from './SvgIcon';\nexport * from './SvgIcon';\nexport { default as SwipeableDrawer } from './SwipeableDrawer';\nexport * from './SwipeableDrawer';\nexport { default as Switch } from './Switch';\nexport * from './Switch';\nexport { default as Tab } from './Tab';\nexport * from './Tab';\nexport { default as Table } from './Table';\nexport * from './Table';\nexport { default as TableBody } from './TableBody';\nexport * from './TableBody';\nexport { default as TableCell } from './TableCell';\nexport * from './TableCell';\nexport { default as TableContainer } from './TableContainer';\nexport * from './TableContainer';\nexport { default as TableFooter } from './TableFooter';\nexport * from './TableFooter';\nexport { default as TableHead } from './TableHead';\nexport * from './TableHead';\nexport { default as TablePagination } from './TablePagination';\nexport * from './TablePagination';\nexport { default as TableRow } from './TableRow';\nexport * from './TableRow';\nexport { default as TableSortLabel } from './TableSortLabel';\nexport * from './TableSortLabel';\nexport { default as Tabs } from './Tabs';\nexport * from './Tabs';\nexport { default as TextField } from './TextField';\nexport * from './TextField';\nexport { default as TextareaAutosize } from './TextareaAutosize';\nexport * from './TextareaAutosize';\nexport { default as Toolbar } from './Toolbar';\nexport * from './Toolbar';\nexport { default as Tooltip } from './Tooltip';\nexport * from './Tooltip';\nexport { default as Typography } from './Typography';\nexport * from './Typography';\nexport { default as useMediaQuery } from './useMediaQuery';\nexport * from './useMediaQuery';\nexport { default as useScrollTrigger } from './useScrollTrigger';\nexport * from './useScrollTrigger';\nexport { default as withMobileDialog } from './withMobileDialog';\nexport * from './withMobileDialog';\nexport { default as withWidth } from './withWidth';\nexport * from './withWidth';\nexport { default as Zoom } from './Zoom';\nexport * from './Zoom';","// import { useState } from 'react'\r\nimport Characters from '../Characters.json'\r\n\r\nimport Layout from '../components/Layout'\r\nimport CharCard from '../components/CharCard'\r\nimport GridComp from '../components/GridComp/'\r\nimport PaperComp from '../components/PaperComp/'\r\nimport Alert from '../components/Alert/'\r\nimport Score from '../components/Score/'\r\n\r\n\r\nclass index extends React.Component {\r\n\r\n    state = {\r\n    //  charGifs: GifyARRAY, \r\n     characters: Characters,\r\n     pickedChars: [],\r\n     topScore: 0,\r\n     alertMessage: \"\" \r\n    }\r\n    componentDidMount() {\r\n      \r\n    }\r\n  \r\n    handlePicked = (e) => {\r\n      // storing name attribute and its value to its charCard in a const variable\r\n      const name = e.target.attributes.getNamedItem(\"name\").value;\r\n      // cb >> shuffleCharacter 'function'\r\n      this.shuffleCharacters();\r\n      // cb >> check guess takes 'name variable' holding the data value for the given card handling ...\r\n      // ... >>> second parameter for checkGuess is a method that is used as a ...\r\n      // ... >>> callback in the checkguess function denoted >> 'cb'\r\n      this.checkGuess(name, this.updateTopScore)\r\n    }\r\n    \r\n    \r\n      updateTopScore = (currentState) => {\r\n        switch (currentState) {\r\n          case this.checkGuess = false:\r\n            this.setState(this.state.topScore + 1)\r\n            if (this.state.topScore >= 12) {\r\n              this.setState(this.state.topScore = 0)\r\n            }\r\n            break;\r\n          \r\n          case this.checkGuess = true: \r\n          this.setState(this.state.topScore = 0)\r\n          break;  \r\n        }\r\n        // console.log(this.state);\r\n      }\r\n      \r\n    shuffleCharacters = () => {\r\n      this.setState(this.state.characters = this.shuffleArray(this.state.characters))\r\n    }\r\n  \r\n    shuffleArray = (arr) => {\r\n      var j, x, i;\r\n      for (i = arr.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i +1));\r\n        x = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = x;\r\n      }\r\n      return arr;\r\n    }\r\n  \r\n    checkGuess = (name,cb) => {\r\n      const newState = { ...this.state };\r\n  \r\n      if (newState.pickedChars.includes(name)) {\r\n        newState.alertMessage = `YOU ALREADY PICKED THAT GIF!!! TRY AGAIN!!!`;\r\n        newState.pickedChars = [];\r\n        this.setState(this.state = newState)\r\n        // console.log(newState);\r\n      } else {\r\n        newState.pickedChars.push(name);\r\n        newState.alertMessage = `GOOD CHOICE!!!`;\r\n        // * \\/\\/~ THIS CHANGES THE TOP SCORE ~\\/\\/ *\r\n        // ***** put and if-statement for each run thru if the choice is wrong then the state is held to the top score!\r\n       // newState.topScore++;\r\n       // *INSERT* cb to a function to control the topscore\r\n        this.setState(this.state =newState);\r\n        // console.log(newState);\r\n      } \r\n         \r\n      //cb(newState, this.alertWinner);\r\n      this.alertWinner(newState)\r\n    }\r\n  \r\n    \r\n  \r\n    alertWinner = (newState) => {\r\n      if (newState.pickedChars.length === 12) {\r\n        newState.alertMessage = alert(\"CONGRADULATIONS! YOU WON!\");\r\n        window.location.reload(false);\r\n        //newState.pickedChars = [];\r\n        this.setState(this.state = newState);\r\n      } else {\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      // console.log(this.state.charGifs[0])\r\n      const GIFDATA = this.state.charGifs\r\n      // console.log(GIFDATA)\r\n      return(\r\n        <div>\r\n            <Layout {...this.props}>\r\n          {/* <NavBar style={{ background: \"#313133\", marginBottom: \"5px\" }} /> */}\r\n          <GridComp container direction=\"column\" style={{ margin: \"0 auto\", maxWidth: 945, textAlign:'center' }}>\r\n          \r\n          <GridComp item lg={12}>\r\n              <PaperComp>\r\n                {this.state.alertMessage === \"GOOD CHOICE!\" ? (\r\n                  <Alert message={this.state.alertMessage} style={{ color: \"green\", fontWeight: \"bolder\" }} />\r\n                ) : (\r\n                    <Alert message={this.state.alertMessage} style={{ color: \"blue\", fontWeight: \"bolder\" }} />\r\n                  )}\r\n              </PaperComp>\r\n            </GridComp>\r\n  \r\n            <GridComp container justify=\"space-between\">\r\n  \r\n              <GridComp item lg={6} md={6} sm={12} xs={12} style={{ paddingLeft: \"100px\", marginLeft: \"161.8px\" }}>\r\n                <PaperComp>\r\n                  <Score type=\"Current Score\" score={this.state.pickedChars.length} />\r\n                </PaperComp>\r\n              </GridComp>\r\n  \r\n              \r\n              \r\n  \r\n            </GridComp>\r\n          </GridComp>\r\n  \r\n          <GridComp container spacing={6} justify=\"center\" style={{ maxWidth: 945, margin: \"0 auto\" }}>\r\n            {this.state.characters.map(char => (\r\n              <GridComp item lg={3} md={3} sm={4} xs={6}>\r\n              <CharCard\r\n                id={char.id}\r\n                name={char.name}\r\n                image={char.image}\r\n                key={char.id}\r\n                handlePicked={this.handlePicked}\r\n              />\r\n              </GridComp>\r\n            ))}\r\n          </GridComp>\r\n          \r\n          </Layout>\r\n        \r\n        </div>\r\n      )\r\n    }\r\n  \r\n  \r\n  \r\n  }\r\n  export default index;\r\n// const index = (props) => {\r\n//     // console.log(props)\r\n//     // CHARCTERS ARRAY\r\n//     const [character, setCharacters] = useState(Characters)\r\n//     // console.log(character)\r\n//     // SCORE\r\n//     const [score, setScore] = useState(0);\r\n//     // console.log(score)\r\n//     // ALERT MESSAGE\r\n//     const [alert, setAlert] = useState('');\r\n//     // console.log(alert)\r\n\r\n//     // METHODS\r\n//     const handlePicked = e => {\r\n//         const name = e.target.attributes.getNamedItem('name').value;\r\n//         console.log(name)\r\n//         shuffleCharacters()\r\n//         //checkGuess takes a name variable that will be used as a JSX prop to the CharCard component\r\n//         // second arg acts as a ...\r\n//         checkGuess(name, updateTopScore)\r\n//         updateTopScore()\r\n//     }\r\n//     const updateTopScore = () => {\r\n        \r\n//       console.log(score)\r\n//       setScore(score+1)\r\n//       console.log(score)\r\n//     }\r\n\r\n//     // * calledback from handlePicked\r\n//     const checkGuess = (name, cb) => {\r\n//         const newState = [...character]\r\n//         console.log(newState)\r\n//         // setAlert(`you picked ${name}`)\r\n//         if (newState.includes(name)) {\r\n//             setAlert(`You already selected ${name.toUpperCase()}!!`)\r\n//             newState = []\r\n//             setCharacters(newState)\r\n//         } else {\r\n//             newState.push(name)\r\n//             setAlert(\"good choice!\")\r\n//         }\r\n//         // console.log(name)\r\n//         // console.log(cb)\r\n//         alertWinner()\r\n//     }\r\n//     console.log(alert)\r\n//     const alertWinner = () => {\r\n//         if (score === 12) {\r\n//             setAlert('holy shit you won!!')\r\n//         }\r\n//     }\r\n//     // * calledback from handlePicked\r\n//     const shuffleCharacters = () => {\r\n//         setCharacters(shuffleArray(character))\r\n//         console.log('STATE')\r\n//         console.log(character)\r\n//         // ** characters shuffle but pics dont shuffle as the data does...\r\n//         console.log('JSON')\r\n//         console.log(Characters)\r\n//     }\r\n//     // * callback from shuffleCharacters\r\n//     const shuffleArray = arr => {\r\n//         let j, x, i;\r\n//         for (i = arr.length - 1; i > 0; i--) {\r\n//             j = Math.floor(Math.random() * (i + 1));\r\n//             x = arr[i];\r\n//             arr[i] = arr[j];\r\n//             arr[j] = x;\r\n//         }\r\n//         return arr\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <Layout>\r\n//                 <GridComp \r\n//                     container \r\n//                     direction='column' \r\n//                     style={{ mrgin: \"0 auto\", maxWidth: 945 }}>\r\n//                         <GridComp item lg={12}>\r\n//                             <PaperComp>\r\n//                                 {alert === \"Good Choice!\" ? (\r\n//                                     <Alert message={alert} style={{ color: 'green' }} />\r\n//                                 ) : (\r\n//                                         <Alert message={alert} style={{ color: 'blue' }} />\r\n//                                     )}\r\n//                             </PaperComp>\r\n//                         </GridComp>\r\n\r\n//                     <GridComp \r\n//                         container \r\n//                         justify=\"space-between\">\r\n//                         <GridComp \r\n//                             item \r\n//                                 lg={6} \r\n//                                 md={6} \r\n//                                 sm={12} \r\n//                                 xs={12} \r\n//                             style={{ padingLeft: '100px', marginLeft: \"101.8px\" }}>\r\n//                             <PaperComp>\r\n//                                 <Score type=\"Score To Win\" Score={character.length} currentScore={score} />\r\n//                             </PaperComp>\r\n//                         </GridComp>\r\n//                     </GridComp>\r\n//                 </GridComp>\r\n\r\n//                 <GridComp container spacing={8} justify='center' style={{ maxWidth: 945, margin: '0 auto' }}>\r\n//                     {character.map(char => (\r\n//                         <CharCard\r\n//                             id={char.id}\r\n//                             key={char.id}\r\n//                             name={char.name}\r\n//                             image={char.image}\r\n//                             handlePicked={handlePicked}\r\n//                         />\r\n//                     ))}\r\n//                 </GridComp>\r\n//             </Layout>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n// export default index"],"mappingsjFA;;;AAkiBA;;;;AA/IA;AACA;AAmsourceRoot":""}